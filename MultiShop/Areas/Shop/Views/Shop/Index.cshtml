@model List<MultiShop.Models.Products>
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    var categ_id = Convert.ToInt32(Context.GetRouteData().Values["id"]);
    int CustomProductCount = Convert.ToInt32(TempData["CustomProductCount"]);
}
<head>
    <script src="https://code.jquery.com/jquery-3.4.1.min.js"></script>

</head>

<div class="container-fluid">
    <div class="row px-xl-5">
        @* @if (CustomProductCount == 0)
        {
        <h1 class="section-title position-absolute text-uppercase text-md-center mb-3"><span class="bg-secondary pr-3">No Product Yet .......</span></h1>
        return;
        }*@
        <!-- Shop Sidebar Start -->
        <div class="col-lg-3 col-md-4">
            <!-- Price Start -->
            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Filter by price</span></h5>
            <div class="bg-light p-4 mb-30">
                <form asp-action="FilterCheckBox">
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" value="price-all" class="custom-control-input" checked id="price-all">
                        <label class="custom-control-label" for="price-all">All Price</label>
                        <span class="badge border font-weight-normal"> @TempData["CustomProductCount"]</span>

                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" value="0-100" class="custom-control-input" id="price-1">
                        <label class="custom-control-label" for="price-1">$0 - $100</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductPrice > 0 && x.ProductPrice <= 100 && x.ProductCategories == categ_id).Count()</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" value="100-200" id="price-2">
                        <label class="custom-control-label" for="price-2">$100 - $200</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductPrice >= 100 && x.ProductPrice <= 200 && x.ProductCategories == categ_id).Count()</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" value="200-300" id="price-3">
                        <label class="custom-control-label" for="price-3">$200 - $300</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductPrice >= 200 && x.ProductPrice <= 300 && x.ProductCategories == categ_id).Count()</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" id="price-4">
                        <label class="custom-control-label" value="300-400" for="price-4">$300 - $400</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductPrice >= 300 && x.ProductPrice <= 400 && x.ProductCategories == categ_id).Count()</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" value="400-500" id="price-5">
                        <label class="custom-control-label" for="price-5">$400 - $500</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductPrice >= 400 && x.ProductPrice <= 500 && x.ProductCategories == categ_id).Count()</span>
                    </div>
                </form>
            </div>
            <!-- Price End -->
            <!-- Color Start -->
            <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Filter by color</span></h5>
            <div class="bg-light p-4 mb-30">
                <form>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" value="color-all" class="custom-control-input" checked id="color-all">
                        <label class="custom-control-label" for="price-all">All Color</label>
                        <span class="badge border font-weight-normal"> @TempData["CustomProductCount"]</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" value="Black" id="color-1">
                        <label class="custom-control-label" for="color-1">Black</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductColor.Contains("Black") && x.ProductCategories == categ_id).Count()</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" value="White" id="color-2">
                        <label class="custom-control-label" for="color-2">White</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductColor.Contains("White") && x.ProductCategories == categ_id).Count()</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" value="Brown" id="color-3">
                        <label class="custom-control-label" for="color-3">Brown</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductColor.Contains("Brown") && x.ProductCategories == categ_id).Count()</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" value="Blue" id="color-4">
                        <label class="custom-control-label" for="color-4">Blue</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductColor.Contains("Blue") && x.ProductCategories == categ_id).Count()</span>
                    </div>
                    <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between">
                        <input type="checkbox" name="filterCheckbox" class="custom-control-input" value="Green" id="color-5">
                        <label class="custom-control-label" for="color-5">Green</label>
                        <span class="badge border font-weight-normal"> @Model.Where(x =>x.ProductColor.Contains("Green") && x.ProductCategories == categ_id).Count()</span>
                    </div>
                </form>
            </div>
            <!-- Color End -->
            <!-- Size Start -->
            @if (categ_id < 15) // excepct clothes categoires
            {
                <h5 class="section-title position-relative text-uppercase mb-3"><span class="bg-secondary pr-3">Filter by size</span></h5>
                <div class="bg-light p-4 mb-30">
                    <form>
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" name="filterCheckbox" value="size-all" class="custom-control-input" checked id="size-all">
                            <label class="custom-control-label" for="size-all">All Size</label>
                            <span class="badge border font-weight-normal">1000</span>
                        </div>
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" name="filterCheckbox" class="custom-control-input" id="size-1">
                            <label class="custom-control-label" for="size-1">XS</label>
                            <span class="badge border font-weight-normal">150</span>
                        </div>
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" name="filterCheckbox" class="custom-control-input" id="size-2">
                            <label class="custom-control-label" for="size-2">S</label>
                            <span class="badge border font-weight-normal">295</span>
                        </div>
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" name="filterCheckbox" class="custom-control-input" id="size-3">
                            <label class="custom-control-label" for="size-3">M</label>
                            <span class="badge border font-weight-normal">246</span>
                        </div>
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between mb-3">
                            <input type="checkbox" name="filterCheckbox" class="custom-control-input" id="size-4">
                            <label class="custom-control-label" for="size-4">L</label>
                            <span class="badge border font-weight-normal">145</span>
                        </div>
                        <div class="custom-control custom-checkbox d-flex align-items-center justify-content-between">
                            <input type="checkbox" name="filterCheckbox" class="custom-control-input" id="size-5">
                            <label class="custom-control-label" for="size-5">XL</label>
                            <span class="badge border font-weight-normal">168</span>
                        </div>
                    </form>
                </div>
            }

            <!-- Size End -->
        </div>
        <!-- Shop Sidebar End -->
        <!-- Shop Product Start -->
        <div class="col-lg-9 col-md-8">
            <div class="row pb-3">
                <div class="col-12 pb-1">
                    <div class="d-flex align-items-center justify-content-between mb-4">
                        <div>
                            <button class="btn btn-sm btn-light"><i class="fa fa-th-large"></i></button>
                            <button class="btn btn-sm btn-light ml-2"><i class="fa fa-bars"></i></button>
                        </div>
                        <div class="ml-2">
                            <div class="btn-group">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-toggle="dropdown">Sorting</button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="#">Latest</a>
                                    <a class="dropdown-item" href="#">Popularity</a>
                                    <a class="dropdown-item" href="#">Best Rating</a>
                                </div>
                            </div>
                            <div class="btn-group ml-2">
                                <button type="button" class="btn btn-sm btn-light dropdown-toggle" data-toggle="dropdown">Showing</button>
                                <div class="dropdown-menu dropdown-menu-right">
                                    <a class="dropdown-item" href="#">10</a>
                                    <a class="dropdown-item" href="#">20</a>
                                    <a class="dropdown-item" href="#">30</a>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                @await Component.InvokeAsync("AllProducts",categ_id)

                <div class="col-12">
                    <nav>
                        <ul class="pagination justify-content-center">
                            <li class="page-item disabled"><a class="page-link" href="#">Previous</span></a></li>
                            <li class="page-item active"><a class="page-link" href="#">1</a></li>
                            <li class="page-item"><a class="page-link" href="#">2</a></li>
                            <li class="page-item"><a class="page-link" href="#">3</a></li>
                            <li class="page-item"><a class="page-link" href="#">Next</a></li>
                        </ul>
                    </nav>
                </div>
            </div>
        </div>
        <!-- Shop Product End -->
    </div>

</div>
<script>
 
    var arr = [];
    $("input[type='checkbox']").change(function () {
        $.each($("input[name='filterCheckbox']:checked"), function () {
            console.log($(this).val());
            $.ajax({
                
                url: '@Url.Action("FilterCheckBox","Shop")',
                method: "post",
                datatype: "json",
                headers: {
                    "RequestVerificationToken": $('input[name = __RequestVerificationToken]').val()
                },
                data: { tempDataValue: '' + $(this).val() + '' }
            });
        });
    });


    function removeDuplicates(arr) {
        return [...new Set(arr)];
    }

    //var distincitArr = removeDuplicates(arr);
    //function KeyPress(e) {
    //    var evtobj = window.event ? event : e
    //    if (evtobj.keyCode == 77 && evtobj.ctrlKey) {
    //        for (var i = 0; i < arr.length; i++) {
    //            console.log(arr[i]);
    //        }
    //    }
    //}
    //document.onkeyup = KeyPress;


</script>

